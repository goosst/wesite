<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>home assistant on Goosst blog</title>
    <link>http://users.telenet.be/goosst/tags/home-assistant/</link>
    <description>Recent content in home assistant on Goosst blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>This work is licensed under a Creative Commons Attribution-NonCommercial 4.0 International License.</copyright>
    <lastBuildDate>Sun, 22 Dec 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="http://users.telenet.be/goosst/tags/home-assistant/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Heating control from Android</title>
      <link>http://users.telenet.be/goosst/posts/hass_tor_macro/</link>
      <pubDate>Sun, 22 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://users.telenet.be/goosst/posts/hass_tor_macro/</guid>
      <description>Intro This is the continuation of HomeAssistant Tor. Here we&amp;rsquo;ll create a macro to automatically turn our heating on/off from an Android phone. The end result is something which only requires two / three pushes on a button on your android phone to turn on my heating. It works when being connected to a mobile network as well as a wifi network.
Method and tools  Macrodroid: Android app used for creating the macro.</description>
    </item>
    
    <item>
      <title>Heating automation - setup hardware and ebus</title>
      <link>http://users.telenet.be/goosst/posts/homeautomation_wemos_ebus/</link>
      <pubDate>Sat, 21 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>http://users.telenet.be/goosst/posts/homeautomation_wemos_ebus/</guid>
      <description>Intro In this part we&amp;rsquo;ll connect to the communication bus of the heater and read / write some parameters by manually commanding them via a raspberry pi (in general, the instructions below work with any computer using debian/ubuntu).
Hardware Ebus adapter We need an ebus adapter for the raspberry to interface with our heater. I&amp;rsquo;m not going to write down all the details, since I can just refer to them:</description>
    </item>
    
    <item>
      <title>Remote access home assistant</title>
      <link>http://users.telenet.be/goosst/posts/hass_tor/</link>
      <pubDate>Sun, 10 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>http://users.telenet.be/goosst/posts/hass_tor/</guid>
      <description>Intro Don&amp;rsquo;t we all want to monitor our home remotely (i.e. when not connected to our local network), turn on the heating on or off if we change our plans, check if everything is going well with our created home automation, etc. Of course we want to do this in a secure way that has limited chance of being hacked.
In this section we&amp;rsquo;ll use tor to access home assistant remotely and connect to it from our mobile phone (through mobile internet).</description>
    </item>
    
    <item>
      <title>Setup debian system</title>
      <link>http://users.telenet.be/goosst/posts/hass_laptop/</link>
      <pubDate>Sat, 02 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>http://users.telenet.be/goosst/posts/hass_laptop/</guid>
      <description>Intro This page is mainly to document the steps starting from a fresh linux install and setting up homeassistant and ebusd.
It starts with a fresh install of the debian based crunchbangplusplus, here installed on an (old) laptop with i386 processor. The same method has worked on other debian based systems (tested on armbian running on a singleboard computer). It is assumed the debian based distro is based on debian Buster.</description>
    </item>
    
    <item>
      <title>e-paper - Extension to two displays</title>
      <link>http://users.telenet.be/goosst/posts/homeautomation_epaper_esp_twodisp/</link>
      <pubDate>Sun, 29 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>http://users.telenet.be/goosst/posts/homeautomation_epaper_esp_twodisp/</guid>
      <description>Intro In this part, the esp32 software will be extended to control two displays. The described solution mainly comes because of the great support from the creator of gxEPD2, so credits to him.
Hardware struggles The used 7.5 inch display, comes with an e-Paper Driver HAT. When connecting it as intended - 3.3V of this ESP32 connected to the 3.3 V of the e-paper HAT - it turns out very unreliable.</description>
    </item>
    
    <item>
      <title>e-paper - Home Assistant</title>
      <link>http://users.telenet.be/goosst/posts/homeautomation_epaper_hass/</link>
      <pubDate>Wed, 18 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>http://users.telenet.be/goosst/posts/homeautomation_epaper_hass/</guid>
      <description>Intro This is the part that will create the content out of home assistant and will get displayed on our e-paper. As an example I will display the expected commute time to work.
Python scripts being defined as a shell_command in configuration.yaml will be used. A simple automation to trigger the python script will be used.
Basis of script We want to make a plot that tells us the expected time of our commute with a graph of the last hour, to see how the time is trending.</description>
    </item>
    
    <item>
      <title>e-paper - Display ESP32</title>
      <link>http://users.telenet.be/goosst/posts/homeautomation_epaper_esp/</link>
      <pubDate>Tue, 17 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>http://users.telenet.be/goosst/posts/homeautomation_epaper_esp/</guid>
      <description>Intro In this part, a figure, living on the Home Assistant server, will be displayed on a 7.5 inch e-paper using an ESP32-based board.
Used components: 7.5 inch e-paper from Waveshare with Driver HAT ESP32 based development board with battery holder Esp 32: pinout The SPI interface of the ESP32 will be used to control the display. The pins of SPI quickly get confusing:
 Names of the different interfaces of SPI aren&amp;rsquo;t very consistently used (MOSI, SPI D, SD0, SS, CS, SCK, CLK, SD1, &amp;hellip; ) + you have to pay attention to the difference between IO pins and GPIO pins in the ESP32 datasheet.</description>
    </item>
    
    <item>
      <title>e-paper - Display concept</title>
      <link>http://users.telenet.be/goosst/posts/homeautomation_epaper_gen/</link>
      <pubDate>Mon, 16 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>http://users.telenet.be/goosst/posts/homeautomation_epaper_gen/</guid>
      <description>Intro This part sketches the entire flow. I&amp;rsquo;ve changed my method a few times during the creation of this. Mainly because I just stumble upon things in the home assistant documentation, rather than actually finding something when I need it :).
Different steps   Sequence to get home assistant content on e-paper    Relevant references to documentation (I want to find it back myself ;):
 Home Assistant: External files Home Assistant: REST API  Remarks:</description>
    </item>
    
    <item>
      <title>e-paper - Display Intro</title>
      <link>http://users.telenet.be/goosst/posts/homeautomation_epaper_intro/</link>
      <pubDate>Sun, 15 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>http://users.telenet.be/goosst/posts/homeautomation_epaper_intro/</guid>
      <description>Intro  E-paper display linked with Home Assistant   --   E-paper display linked with Home Assistant   I wanted a display which:
 does not consume (a lot of) electricity is linked with home-assistant, so I can get useful updates pending the moment of the day can display interesting photos, when I don&amp;rsquo;t want to know the status of my house / surroundings :) doesn&amp;rsquo;t cost an arm and a leg  The result of my tinkering can be seen in the picture above.</description>
    </item>
    
    <item>
      <title>Heating automation - alarm</title>
      <link>http://users.telenet.be/goosst/posts/homeautomation_alarm/</link>
      <pubDate>Fri, 10 May 2019 00:00:00 +0000</pubDate>
      
      <guid>http://users.telenet.be/goosst/posts/homeautomation_alarm/</guid>
      <description>HAHAHUGOSHORTCODE-TOC0-HBHB  Intro I&amp;rsquo;ve let a relay install during yearly maintenance of my alarm, this allows me to tell me when the alarm is turned on or off. This makes life for presence detection significantly more simple :).
We&amp;rsquo;ll use MQTT to send status of alarm to Home Assistant.
Troubleshooting The connection of a Wemos D1 with Arduino IDE seems to be junk (the arduino IDE part). We need to use esptool instead pip3 install esptool.</description>
    </item>
    
  </channel>
</rss>